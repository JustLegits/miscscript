if not game:IsLoaded() then
    game.Loaded:Wait()
end

wait(math.random())

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")
local player = Players.LocalPlayer

local p = game:GetService("Players").LocalPlayer
local tps = game:GetService("TeleportService")
local a = p:WaitForChild("ItemsInventory"):WaitForChild("Dragonpoints"):WaitForChild("Amount")

-- References
local stageName = "The Lost Ancient World"
local stage = player:WaitForChild("Stages"):WaitForChild(stageName)
local floor = stage:WaitForChild("Floor")
local dragonPoints = player:WaitForChild("ItemsInventory"):WaitForChild("Dragonpoints"):WaitForChild("Amount")

-- Create + Start portal function
local function createPortal()
    local currentFloor = tostring(floor.Value)

    -- Step 1: Create portal
    local createArgs = {
        "Tower Adventures",
        {
            stageName,
            currentFloor,
            "Tower Adventures"
        }
    }

    local success, result = pcall(function()
        return ReplicatedStorage:WaitForChild("PlayMode")
            :WaitForChild("Events")
            :WaitForChild("CreatingPortal")
            :InvokeServer(unpack(createArgs))
    end)

    if success then
        print("✅ Portal created at floor:", currentFloor)

        -- Wait 2 seconds before starting portal
        task.wait(2)

        -- Step 2: Start portal
        local startArgs = {
            "Create",
            {
                stageName,
                currentFloor,
                "Tower Adventures"
            }
        }

        local startSuccess, startResult = pcall(function()
            return ReplicatedStorage:WaitForChild("PlayMode")
                :WaitForChild("Events")
                :WaitForChild("CreatingPortal")
                :InvokeServer(unpack(startArgs))
        end)

        if startSuccess then
            print("🚀 Portal started at floor:", currentFloor)
        else
            warn("⚠️ Failed to start portal:", startResult)
        end

    else
        warn("❌ Portal creation failed:", result)
    end
end

-- Use capsule function
local function useRagnaCapsule()
    local args1 = {
        "999",
        "Ragna Capsule",
        "RagnaShop"
    }

    ReplicatedStorage:WaitForChild("PlayMode")
        :WaitForChild("Events")
        :WaitForChild("EventShop")
        :InvokeServer(unpack(args1))

    task.wait(1)

    local args2 = {
        "Ragna Capsule",
        999
    }

    ReplicatedStorage:WaitForChild("PlayMode")
        :WaitForChild("Events")
        :WaitForChild("Use")
        :InvokeServer(unpack(args2))
end

-- Execute capsule usage
useRagnaCapsule()
task.wait(2)
useRagnaCapsule()
task.wait(10)

-- Check dragon points and act accordingly every 15 seconds
while true do
    task.wait(15)
    print("[Dragonpoints]: " .. a.Value)
    if a.Value >= 10000 then
        tps:Teleport(17282336195, p)
        break
    else
        createPortal()
    end
end
